// QuickSort

const quickSort = (arr) => {
  if (arr.length <= 1) {
    return arr;
  }

  let pivot = arr[0];
  let leftArr = [];
  let rightArr = [];

  for (let i = 1; i < arr.length; i++) {
    if (arr[i] < pivot) {
      leftArr.push(arr[i]);
    } else {
      rightArr.push(arr[i]);
    }
  }

  return [...quickSort(leftArr), pivot, ...quickSort(rightArr)];
};

//QuickSortRecursivo
function quickSortRecursive(arr, start, end) {
      if (start >= end) {
        return;
    }       
    let index = partition(arr, start, end);
       
  quickSort(arr, start, index - 1);
  quickSort(arr, index + 1, end);
}

//QuickSortIterativo
function quickSortIterative(arr) {    
    stack = []; 
    stack.push(0);
    stack.push(arr.length - 1);
    
    while(stack[stack.length - 1] >= 0){
             
        end = stack.pop();
        start = stack.pop();
        
        pivotIndex = partition(arr, start, end);
        
    
        if (pivotIndex - 1 > start){
            stack.push(start);
            stack.push(pivotIndex - 1);
        }
        
        if (pivotIndex + 1 < end){
            stack.push(pivotIndex + 1);
            stack.push(end);
        }
    }
}
